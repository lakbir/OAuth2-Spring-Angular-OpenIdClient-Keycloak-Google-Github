spring.application.name=customer-app
spring.datasource.url=jdbc:h2:mem:customers-db
spring.h2.console.enabled=true
server.port=8090

#configs for OAuth2 with google
spring.security.oauth2.client.registration.google.client-id=880713579799-ddeiulpu2pepk9uf9dl729rj43h6evp5.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.provider.google.user-name-attribute=email


#configs for OAuth2 with github
spring.security.oauth2.client.registration.github.client-id=2ac17209e20d5a688a42
spring.security.oauth2.client.registration.github.client-secret=de361b1703cbc334ef62822089e5a0e5cf5d4c15
spring.security.oauth2.client.provider.github.user-name-attribute=login

#configs for OAuth2 with keycloak
spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=sdia-customer-client
spring.security.oauth2.client.registration.keycloak.client-secret=NlS7jQnFiGJ4391C7gRlC9gLcUOE5nNW
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=${KEYCLOAK_REDIRECT_URI:http://localhost:8090/login/oauth2/code/sdia-customer-client}
spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/sdia-realm}
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username


spring.security.oauth2.client.provider.keycloak.authorization-uri=${KEYCLOAK_AUTH:http://localhost:8080/realms/sdia-realm/protocol/openid-connect/auth}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_AUTH_TOKEN:http://localhost:8080/realms/sdia-realm/protocol/openid-connect/token}
#spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${JWT_JWK_SET_URI:http://localhost:8080/realms/sdia-realm/protocol/openid-connect/certs}
#inventory.service.base.uri=${INVENTORY_SERVICE_BASE_URI:http://localhost:8098}

inventory.service.base.uri=${INVENTORY_SERVICE_BASE_URI:http://localhost:8098}

